---
apiVersion: v1
kind: Namespace
metadata:
  name: otc-route-manager
  labels:
    name: otc-route-manager
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otc-route-manager
  namespace: otc-route-manager
  labels:
    app: otc-route-manager

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otc-route-manager
  labels:
    app: otc-route-manager
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otc-route-manager
  labels:
    app: otc-route-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otc-route-manager
subjects:
- kind: ServiceAccount
  name: otc-route-manager
  namespace: otc-route-manager

---
apiVersion: v1
kind: Secret
metadata:
  name: otc-credentials
  namespace: otc-route-manager
  labels:
    app: otc-route-manager
type: Opaque
data:
  # Base64 encoded values - replace with your actual credentials
  OS_USERNAME: ""          # echo -n "your-username" | base64
  OS_PASSWORD: ""          # echo -n "your-password" | base64
  OS_PROJECT_NAME: ""      # echo -n "your-project-name" | base64
  OS_DOMAIN_NAME: ""       # echo -n "your-domain-name" | base64

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otc-route-manager-config
  namespace: otc-route-manager
  labels:
    app: otc-route-manager
data:
  OS_AUTH_URL: "https://iam.eu-de.otc.t-systems.com/v3"
  OS_REGION_NAME: "eu-de"
  ROUTE_TABLE_ID: ""       # Replace with your route table ID
  VPC_SUBNET_ID: ""        # Replace with your VPC subnet ID
  ROUTER_ID: ""            # Replace with your router ID
  CLUSTER_CIDR: "10.244.0.0/16"    # Replace with your cluster CIDR
  SERVICE_CIDR: "10.96.0.0/12"     # Replace with your service CIDR
  METRICS_PORT: "8080"

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: otc-route-manager
  namespace: otc-route-manager
  labels:
    app: otc-route-manager
spec:
  selector:
    matchLabels:
      app: otc-route-manager
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: otc-route-manager
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: otc-route-manager
      hostNetwork: false
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: otc-route-manager
        image: otc-route-manager:latest  # Replace with your image registry/tag
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom:
        - secretRef:
            name: otc-credentials
        - configMapRef:
            name: otc-route-manager-config
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: otc-route-manager-metrics
  namespace: otc-route-manager
  labels:
    app: otc-route-manager
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: metrics
  selector:
    app: otc-route-manager

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: otc-route-manager
  namespace: otc-route-manager
  labels:
    app: otc-route-manager
spec:
  selector:
    matchLabels:
      app: otc-route-manager
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    